{
  "questions": [
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=1",
      "statement": "Which of the following is correct about TypeScript?",
      "options": [
        { "text": "Angular is based on TypeScript.", "correct": false },
        { "text": "This is a superset of JavaScript.", "correct": false },
        { "text": "TypeScript is maintained by Microsoft.", "correct": false },
        { "text": "All of the above.", "correct": true }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=1",
      "statement": "What is .subscribe?",
      "options": [
        { "text": "Streams data in asynchronously", "correct": false },
        { "text": "Streams data in synchronously", "correct": false },
        { "text": "Both", "correct": false },
        { "text": "None of above", "correct": true }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=1",
      "statement": "What does AOT stand for?",
      "options": [
        { "text": "Ahead-Of-Time Compilation", "correct": false },
        { "text": "Angular Object Templates", "correct": false },
        { "text": "Both", "correct": false },
        { "text": "None of above", "correct": true }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=1",
      "statement": "Which of the following is not a hook application life cycle?",
      "options": [
        { "text": "ngOnChanges", "correct": false },
        { "text": "ngViewStart", "correct": false },
        { "text": "ngOnInit", "correct": false },
        { "text": "None of the above", "correct": true }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=1",
      "statement": "Router is part of which of the following module?",
      "options": [
        { "text": "@angular/core", "correct": false },
        { "text": "@angular/router", "correct": false },
        { "text": "Both", "correct": false },
        { "text": "None of the above", "correct": true }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=1",
      "statement": "RxJS can be used for?",
      "options": [
        { "text": "Browser", "correct": false },
        { "text": "Server Side", "correct": false },
        { "text": "Both", "correct": false },
        { "text": "None of the above", "correct": true }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=1",
      "statement": "Which angular decorator allows us to define the pipe name that is globally available for use in any template in the across application?",
      "options": [
        { "text": "pipeName", "correct": false },
        { "text": "pipeDeco", "correct": false },
        { "text": "Pipe", "correct": false },
        { "text": "None of the above", "correct": true }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=1",
      "statement": "What is the decorator used for configuring your module class?",
      "options": [
        { "text": "@NgModule", "correct": false },
        { "text": "@NgApp", "correct": false },
        { "text": "Both", "correct": false },
        { "text": "None of the above", "correct": true }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=1",
      "statement": "What is used .angular-cli.json",
      "options": [
        { "text": "Used to link external files", "correct": false },
        {
          "text": "Used to configure your angular 2 project",
          "correct": false
        },
        {
          "text": "used to install required project packages",
          "correct": false
        },
        { "text": "None of the above", "correct": true }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=1",
      "statement": "Which file is responsible for startup of angular 2 project ?",
      "options": [
        { "text": "main.ts", "correct": false },
        { "text": "index.js", "correct": false },
        { "text": "app.ts", "correct": false },
        { "text": "angular.cli.json", "correct": true }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=2",
      "statement": "Which of the following is the correct way to apply a filter?",
      "options": [
        { "text": "Property-value | filter", "correct": true },
        { "text": "Property-value || filter", "correct": false },
        { "text": "Property-value && filter", "correct": false },
        { "text": "None of the above", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=2",
      "statement": "Interpolation in angular 2 is done using",
      "options": [
        { "text": "{{}}", "correct": true },
        { "text": "{{{}}}", "correct": false },
        { "text": "{{|var}}", "correct": false },
        { "text": "!!!!", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=2",
      "statement": "Which of the following filter is used to convert input to all uppercase?",
      "options": [
        { "text": "upper", "correct": true },
        { "text": "uppercase", "correct": false },
        { "text": "toUpper", "correct": false },
        { "text": "None of the above", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=2",
      "statement": "Which of the following is not a hook in Angular 2 application life cycle.",
      "options": [
        { "text": "ngOnInit", "correct": true },
        { "text": "ngOnChanges", "correct": false },
        { "text": "ngAfterViewInit", "correct": false },
        { "text": "ngViewStart", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=2",
      "statement": "Which of the following service has Angular 2, that allows us to dynamically load a component in a certain position on the page?",
      "options": [
        { "text": "DynamicComponentLoader", "correct": true },
        { "text": "DynamicControlLoader", "correct": false },
        { "text": "DynamicControllerLoader", "correct": false },
        { "text": "None of the above", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=2",
      "statement": "Which of the following option is using Angular 2 to detect changes.",
      "options": [
        { "text": "Scope.js", "correct": true },
        { "text": "zone$.js", "correct": false },
        { "text": "zone.js", "correct": false },
        { "text": "zones.js", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=2",
      "statement": "Needs cleanup step before compiling",
      "options": [
        {
          "text": "Need to maintain AOT version of bootstrap file",
          "correct": true
        },
        { "text": "Works only with HTML and CSS", "correct": false },
        { "text": "Detect error at build time", "correct": false },
        { "text": "None of the above", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=2",
      "statement": "Which of the following is not a feature of Angular 2?",
      "options": [
        { "text": "Components", "correct": true },
        { "text": "Multithread", "correct": false },
        { "text": "TypeScript", "correct": false },
        { "text": "Services", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=2",
      "statement": "To start working with Angular 2, we need to install the \\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_components.",
      "options": [
        { "text": "Npm", "correct": true },
        { "text": "Editor", "correct": false },
        { "text": "GIT", "correct": false },
        { "text": "All of the above", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=2",
      "statement": "Which of the following option is correct about tsconfig.json?",
      "options": [
        {
          "text": "This file contains information about Angular 2 project.",
          "correct": true
        },
        {
          "text": "This file contains the system files required for Angular JS application.",
          "correct": false
        },
        {
          "text": "This file is used to give the options about TypeScript used for the Angular JS project.",
          "correct": false
        },
        { "text": "All of the above", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=3",
      "statement": "How does Angular 4 improved error handling, when an error is caused by something in a template?",
      "options": [
        {
          "text": "By enabling TypeScript's StrictNullChecks",
          "correct": false
        },
        {
          "text": "By creating flattened versions of Angular modules",
          "correct": true
        },
        {
          "text": "By generating source maps in terms of original template",
          "correct": false
        },
        { "text": "None of the above", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=3",
      "statement": "Observables help you manage . . . . . . . . data.",
      "options": [
        { "text": "synchronous", "correct": false },
        { "text": "asynchronous", "correct": true },
        { "text": "Both  ( synchronous & asynchronous )", "correct": false },
        { "text": "None of the above", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=3",
      "statement": "Where would you put it?",
      "options": [
        { "text": "In the Component", "correct": false },
        { "text": "In the Template", "correct": true },
        { "text": "In the Injectable decorator", "correct": false },
        { "text": "In the module", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=3",
      "statement": "How would you display a list of Employees on a webpage along with where they were in the list?",
      "options": [
        { "text": "Loop through and print the index", "correct": false },
        { "text": "Loop through and print the employees", "correct": true },
        {
          "text": "Pass both the index and the employee to a web service",
          "correct": false
        },
        {
          "text": "Loop through and print the index and the employee",
          "correct": false
        }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=3",
      "statement": "If you chain multiple pipes together, they are executed",
      "options": [
        { "text": "in parallel", "correct": false },
        { "text": "LIFO order", "correct": true },
        { "text": "in the order in which you specify them", "correct": false },
        { "text": "None of the above", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=3",
      "statement": "The number pipe is location sensitive, which means that the same format argument will produce differently formatted results based on the . . . . . . .",
      "options": [
        { "text": "user's format setting", "correct": false },
        { "text": "user's locale setting", "correct": true },
        { "text": "user's currency setting", "correct": false },
        { "text": "All of the above", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=3",
      "statement": "How would you retrieve a list of items from a server's URL?",
      "options": [
        { "text": "Create a URL transaction", "correct": false },
        { "text": "Use the HTTP get method", "correct": true },
        { "text": "Create a get SQL statement", "correct": false },
        { "text": "Use an HTTP package", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=3",
      "statement": "Which of the following is not built-in pipe in Angular?",
      "options": [
        { "text": "DatePipe", "correct": false },
        { "text": "CurrencyPipe", "correct": true },
        { "text": "DataPipe", "correct": false },
        { "text": "PercentPipe", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=3",
      "statement": "How would you debug and evaluate the response of the http.get function (using HttpClient) using a debugger?",
      "options": [
        {
          "text": "You cannot place breakpoints on asynchronous operators",
          "correct": false
        },
        {
          "text": "Place a breakpoint on the function that calls the http.get",
          "correct": true
        },
        { "text": "Place a breakpoint on the http.get", "correct": false },
        {
          "text": "Place a breakpoint inside one of the functions inside the pipe call",
          "correct": false
        }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=3",
      "statement": "What does this syntax do? routerLink=\"/crisis-center\"",
      "options": [
        {
          "text": "It navigates to the component with a name matching the assigned string",
          "correct": false
        },
        {
          "text": "It links a route to a service by matching the assigned string to a service class name",
          "correct": true
        },
        {
          "text": "It links a route with data by matching the assigned string to a property name",
          "correct": false
        },
        {
          "text": "It navigates to the component with a path matching the assigned string",
          "correct": false
        }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=4",
      "statement": "What is the correct syntax to associate an external template file orders.component.html to an OrdersComponent , when both are in the same orders/ folder?",
      "options": [
        {
          "text": "    @Component({\n      templateUrl: './orders.component.html'\n    })",
          "correct": true
        },
        {
          "text": "    @Component({\n      template: './orders.component.html'\n    })",
          "correct": false
        },
        {
          "text": "    @Component({\n      templateUrl: './orders/orders.component.html'\n    })",
          "correct": false
        },
        {
          "text": "    @Component({\n    template: `\n     ./orders/orders.component.html`\n    })",
          "correct": false
        }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=4",
      "statement": "The purpose of the providers array of an Angular module is to define the set of:",
      "options": [
        {
          "text": "libraries used by the application including Angular system and third-party libraries.",
          "correct": true
        },
        {
          "text": "objects available for dependency injection.",
          "correct": false
        },
        {
          "text": "components that the application provides to other parts of the application.",
          "correct": false
        },
        {
          "text": "components, custom directives, and custom pipes.",
          "correct": false
        }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=4",
      "statement": "What command will create a new Angular app with a root routing module?",
      "options": [
        { "text": "ng new my-dream-app --routing", "correct": true },
        { "text": "ng new my-dream-app --module", "correct": false },
        { "text": "ng generate my-dream-app --routing", "correct": false },
        { "text": "ng generate my-dream-app", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=4",
      "statement": "You apply a style selector in a component's CSS file. Which matching elements will be affected?",
      "options": [
        { "text": "All matching elements in the application", "correct": true },
        {
          "text": "All matching elements in the component and its child components",
          "correct": false
        },
        { "text": "All matching elements in the module", "correct": false },
        {
          "text": "All matching elements in the component, only",
          "correct": false
        }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=4",
      "statement": "How would you write code to modify the response from an http.get ?",
      "options": [
        {
          "text": "Using the modify operator chained to the http.get",
          "correct": true
        },
        {
          "text": "Using the map function inside of the pipe operator chained to the http.get",
          "correct": false
        },
        {
          "text": "Using the transform operator chained to the http.get",
          "correct": false
        },
        {
          "text": "Subscribing to the http.get and setting the response to a local variable",
          "correct": false
        }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=4",
      "statement": "Where would the following code likely be found in an Angular application? routerLink=\"/crisis-center\"",
      "options": [
        { "text": "In the component metadata", "correct": true },
        { "text": "In a service", "correct": false },
        { "text": "In the template", "correct": false },
        { "text": "In the component class", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=4",
      "statement": "What is a routerOutlet?",
      "options": [
        {
          "text": "A directive defined in the HTML identifying the route to activate",
          "correct": true
        },
        {
          "text": "A directive defined in the HTML indicating where a route's view should display",
          "correct": false
        },
        {
          "text": "A decorator defining the template to display when a route is activated",
          "correct": false
        },
        {
          "text": "A property of a component class used to activate a route",
          "correct": false
        }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=4",
      "statement": "According to the Angular Style Guide, what type of code should a component delegate to a service?",
      "options": [
        { "text": "Event handlers", "correct": true },
        { "text": "Complex logic", "correct": false },
        { "text": "DOM manipulation", "correct": false },
        { "text": "Debugging logic", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=4",
      "statement": "How do you load an NgModule into its own bundle?",
      "options": [
        {
          "text": "Use lazy loading with the route that leads to the NgModule",
          "correct": true
        },
        {
          "text": "Add a route to each component in the NgModule",
          "correct": false
        },
        {
          "text": "Tell the route to point to the symbol of the NgModule",
          "correct": false
        },
        { "text": "ng build --lazy", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=4",
      "statement": "What advantage does AOT give your app with regard to compilation?",
      "options": [
        {
          "text": "Precompiles when the code is served, instead of in the browser",
          "correct": true
        },
        {
          "text": "Precompiles at build time, instead of in the browser",
          "correct": false
        },
        {
          "text": "Tree shakes all unused code when the app is served",
          "correct": false
        },
        { "text": "Compiles in the browser", "correct": false }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=5",
      "statement": "Which is the correct command to create a component named CustomerDetailComponent with the CLI (with this exact casing)?",
      "options": [
        { "text": "ng generate component customerdetail", "correct": false },
        { "text": "ng create component customer-detail", "correct": false },
        { "text": "ng c c customer-detail", "correct": false },
        { "text": "ng generate component customer-detail", "correct": true }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=5",
      "statement": "What is the purpose of FormBuilder?",
      "options": [
        {
          "text": "Generates the form elements from data properties in the component class",
          "correct": false
        },
        {
          "text": "Creates the form data structure from a specified configuration when building reactive forms",
          "correct": false
        },
        {
          "text": "Creates the form data structure from a specified configuration when building template-driven forms",
          "correct": false
        },
        {
          "text": "Creates the form data structure from a specified configuration when building template-driven forms",
          "correct": true
        }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=5",
      "statement": "Which Angular CLI flag will not generate unit tests for a component?",
      "options": [
        { "text": "\\--spec false", "correct": false },
        { "text": "\\--testing false", "correct": false },
        { "text": "\\--unit-test false", "correct": false },
        { "text": "\\--test false", "correct": true }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=5",
      "statement": "Which of the following will map the name of an input parameter \"userData\" to a field named \"users\"?",
      "options": [
        { "text": "@Input('userData') users", "correct": false },
        { "text": "@Input() userData: users", "correct": false },
        { "text": "@Input() users: userData", "correct": false },
        { "text": "@Input('users') userData", "correct": true }
      ]
    },
    {
      "type": "MCQ",
      "source": "https://www.freetimelearning.com/online-quiz/angular-quiz.php?page=5",
      "statement": "When using FormBuilder, how are validation rules specified?",
      "options": [
        {
          "text": "As part of the FormControl configuration: heroName: \\['', Validators.required\\]",
          "correct": false
        },
        {
          "text": "As part of the FormControl configuration: heroName: \\[Validators.required, ''\\]",
          "correct": false
        },
        {
          "text": "As standard HTML validation attributes added to the input element",
          "correct": false
        },
        {
          "text": "As part of the input element binding: formControl=\"\\[heroName, Validators.required\\]\"",
          "correct": true
        }
      ]
    }
  ]
}
